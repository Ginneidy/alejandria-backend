openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/authors/:
    get:
      operationId: authors_list
      tags:
      - authors
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'
          description: ''
    post:
      operationId: authors_create
      tags:
      - authors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Author'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Author'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
  /api/authors/{id}/:
    get:
      operationId: authors_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this author.
        required: true
      tags:
      - authors
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
    put:
      operationId: authors_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this author.
        required: true
      tags:
      - authors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Author'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Author'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
    patch:
      operationId: authors_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this author.
        required: true
      tags:
      - authors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAuthor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAuthor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAuthor'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
    delete:
      operationId: authors_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this author.
        required: true
      tags:
      - authors
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/books/:
    get:
      operationId: books_list
      tags:
      - books
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
          description: ''
    post:
      operationId: books_create
      tags:
      - books
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Book'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Book'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
  /api/books/{id}/:
    get:
      operationId: books_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this book.
        required: true
      tags:
      - books
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
    put:
      operationId: books_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this book.
        required: true
      tags:
      - books
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Book'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Book'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
    patch:
      operationId: books_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this book.
        required: true
      tags:
      - books
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBook'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBook'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBook'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
    delete:
      operationId: books_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this book.
        required: true
      tags:
      - books
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/carts/:
    get:
      operationId: carts_list
      tags:
      - carts
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cart'
          description: ''
    post:
      operationId: carts_create
      tags:
      - carts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cart'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Cart'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Cart'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
          description: ''
  /api/carts/{id}/:
    get:
      operationId: carts_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this cart.
        required: true
      tags:
      - carts
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
          description: ''
    put:
      operationId: carts_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this cart.
        required: true
      tags:
      - carts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cart'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Cart'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Cart'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
          description: ''
    patch:
      operationId: carts_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this cart.
        required: true
      tags:
      - carts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCart'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCart'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCart'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
          description: ''
    delete:
      operationId: carts_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this cart.
        required: true
      tags:
      - carts
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/categories/:
    get:
      operationId: categories_list
      tags:
      - categories
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
    post:
      operationId: categories_create
      tags:
      - categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /api/categories/{id}/:
    get:
      operationId: categories_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - categories
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    put:
      operationId: categories_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    patch:
      operationId: categories_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    delete:
      operationId: categories_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - categories
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/comments/:
    get:
      operationId: comments_list
      tags:
      - comments
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
          description: ''
    post:
      operationId: comments_create
      tags:
      - comments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
  /api/comments/{id}/:
    get:
      operationId: comments_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this comment.
        required: true
      tags:
      - comments
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    put:
      operationId: comments_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this comment.
        required: true
      tags:
      - comments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    patch:
      operationId: comments_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this comment.
        required: true
      tags:
      - comments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedComment'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    delete:
      operationId: comments_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this comment.
        required: true
      tags:
      - comments
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/favoriteList/:
    get:
      operationId: favoriteList_list
      tags:
      - favoriteList
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FavoriteList'
          description: ''
    post:
      operationId: favoriteList_create
      tags:
      - favoriteList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FavoriteList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FavoriteList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FavoriteList'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FavoriteList'
          description: ''
  /api/favoriteList/{id}/:
    get:
      operationId: favoriteList_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this favorite list.
        required: true
      tags:
      - favoriteList
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FavoriteList'
          description: ''
    put:
      operationId: favoriteList_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this favorite list.
        required: true
      tags:
      - favoriteList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FavoriteList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FavoriteList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FavoriteList'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FavoriteList'
          description: ''
    patch:
      operationId: favoriteList_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this favorite list.
        required: true
      tags:
      - favoriteList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFavoriteList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFavoriteList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFavoriteList'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FavoriteList'
          description: ''
    delete:
      operationId: favoriteList_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this favorite list.
        required: true
      tags:
      - favoriteList
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/formats/:
    get:
      operationId: formats_list
      tags:
      - formats
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Format'
          description: ''
    post:
      operationId: formats_create
      tags:
      - formats
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Format'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Format'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Format'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Format'
          description: ''
  /api/formats/{id}/:
    get:
      operationId: formats_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this format.
        required: true
      tags:
      - formats
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Format'
          description: ''
    put:
      operationId: formats_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this format.
        required: true
      tags:
      - formats
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Format'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Format'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Format'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Format'
          description: ''
    patch:
      operationId: formats_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this format.
        required: true
      tags:
      - formats
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFormat'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFormat'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFormat'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Format'
          description: ''
    delete:
      operationId: formats_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this format.
        required: true
      tags:
      - formats
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/publishers/:
    get:
      operationId: publishers_list
      tags:
      - publishers
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Publisher'
          description: ''
    post:
      operationId: publishers_create
      tags:
      - publishers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Publisher'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Publisher'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Publisher'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publisher'
          description: ''
  /api/publishers/{id}/:
    get:
      operationId: publishers_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this publisher.
        required: true
      tags:
      - publishers
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publisher'
          description: ''
    put:
      operationId: publishers_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this publisher.
        required: true
      tags:
      - publishers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Publisher'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Publisher'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Publisher'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publisher'
          description: ''
    patch:
      operationId: publishers_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this publisher.
        required: true
      tags:
      - publishers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPublisher'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPublisher'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPublisher'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publisher'
          description: ''
    delete:
      operationId: publishers_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this publisher.
        required: true
      tags:
      - publishers
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/purchases/:
    get:
      operationId: purchases_list
      tags:
      - purchases
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Purchase'
          description: ''
    post:
      operationId: purchases_create
      tags:
      - purchases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Purchase'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Purchase'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Purchase'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Purchase'
          description: ''
  /api/purchases/{id}/:
    get:
      operationId: purchases_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this purchase.
        required: true
      tags:
      - purchases
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Purchase'
          description: ''
    put:
      operationId: purchases_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this purchase.
        required: true
      tags:
      - purchases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Purchase'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Purchase'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Purchase'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Purchase'
          description: ''
    patch:
      operationId: purchases_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this purchase.
        required: true
      tags:
      - purchases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPurchase'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPurchase'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPurchase'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Purchase'
          description: ''
    delete:
      operationId: purchases_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this purchase.
        required: true
      tags:
      - purchases
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/roles/:
    get:
      operationId: roles_list
      tags:
      - roles
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
          description: ''
    post:
      operationId: roles_create
      tags:
      - roles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Role'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
  /api/roles/{id}/:
    get:
      operationId: roles_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this role.
        required: true
      tags:
      - roles
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
    put:
      operationId: roles_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this role.
        required: true
      tags:
      - roles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Role'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
    patch:
      operationId: roles_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this role.
        required: true
      tags:
      - roles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRole'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRole'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRole'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
    delete:
      operationId: roles_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this role.
        required: true
      tags:
      - roles
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/sales/:
    get:
      operationId: sales_list
      tags:
      - sales
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sale'
          description: ''
    post:
      operationId: sales_create
      tags:
      - sales
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sale'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Sale'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Sale'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sale'
          description: ''
  /api/sales/{id}/:
    get:
      operationId: sales_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this sale.
        required: true
      tags:
      - sales
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sale'
          description: ''
    put:
      operationId: sales_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this sale.
        required: true
      tags:
      - sales
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sale'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Sale'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Sale'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sale'
          description: ''
    patch:
      operationId: sales_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this sale.
        required: true
      tags:
      - sales
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSale'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSale'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSale'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sale'
          description: ''
    delete:
      operationId: sales_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this sale.
        required: true
      tags:
      - sales
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/users/:
    get:
      operationId: users_list
      tags:
      - users
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: users_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/{id}/:
    get:
      operationId: users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    Author:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_date:
          type: string
          format: date-time
        deleted_date:
          type: string
          format: date-time
          nullable: true
        name:
          type: string
          maxLength: 30
      required:
      - created_date
      - id
      - name
    Book:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_date:
          type: string
          format: date-time
        deleted_date:
          type: string
          format: date-time
          nullable: true
        title:
          type: string
          maxLength: 40
        price:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        description:
          type: string
        pub_year:
          type: string
          nullable: true
          maxLength: 5
        pages:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        front_page:
          type: string
          nullable: true
        format:
          type: integer
        author:
          type: integer
          nullable: true
        publisher:
          type: integer
          nullable: true
        seller:
          type: integer
        categories:
          type: array
          items:
            type: integer
      required:
      - categories
      - created_date
      - description
      - format
      - id
      - pages
      - price
      - seller
      - title
    Cart:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_date:
          type: string
          format: date-time
        deleted_date:
          type: string
          format: date-time
          nullable: true
        total_amount:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        user:
          type: integer
        books:
          type: array
          items:
            type: integer
      required:
      - books
      - created_date
      - id
      - total_amount
      - user
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_date:
          type: string
          format: date-time
        deleted_date:
          type: string
          format: date-time
          nullable: true
        description:
          type: string
          maxLength: 30
      required:
      - created_date
      - description
      - id
    Comment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_date:
          type: string
          format: date-time
        deleted_date:
          type: string
          format: date-time
          nullable: true
        observation:
          type: string
        user:
          type: integer
      required:
      - created_date
      - id
      - observation
      - user
    FavoriteList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_date:
          type: string
          format: date-time
        deleted_date:
          type: string
          format: date-time
          nullable: true
        user:
          type: integer
        books:
          type: array
          items:
            type: integer
      required:
      - books
      - created_date
      - id
      - user
    Format:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_date:
          type: string
          format: date-time
        deleted_date:
          type: string
          format: date-time
          nullable: true
        description:
          type: string
          maxLength: 30
      required:
      - created_date
      - description
      - id
    PatchedAuthor:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_date:
          type: string
          format: date-time
        deleted_date:
          type: string
          format: date-time
          nullable: true
        name:
          type: string
          maxLength: 30
    PatchedBook:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_date:
          type: string
          format: date-time
        deleted_date:
          type: string
          format: date-time
          nullable: true
        title:
          type: string
          maxLength: 40
        price:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        description:
          type: string
        pub_year:
          type: string
          nullable: true
          maxLength: 5
        pages:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        front_page:
          type: string
          nullable: true
        format:
          type: integer
        author:
          type: integer
          nullable: true
        publisher:
          type: integer
          nullable: true
        seller:
          type: integer
        categories:
          type: array
          items:
            type: integer
    PatchedCart:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_date:
          type: string
          format: date-time
        deleted_date:
          type: string
          format: date-time
          nullable: true
        total_amount:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        user:
          type: integer
        books:
          type: array
          items:
            type: integer
    PatchedCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_date:
          type: string
          format: date-time
        deleted_date:
          type: string
          format: date-time
          nullable: true
        description:
          type: string
          maxLength: 30
    PatchedComment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_date:
          type: string
          format: date-time
        deleted_date:
          type: string
          format: date-time
          nullable: true
        observation:
          type: string
        user:
          type: integer
    PatchedFavoriteList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_date:
          type: string
          format: date-time
        deleted_date:
          type: string
          format: date-time
          nullable: true
        user:
          type: integer
        books:
          type: array
          items:
            type: integer
    PatchedFormat:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_date:
          type: string
          format: date-time
        deleted_date:
          type: string
          format: date-time
          nullable: true
        description:
          type: string
          maxLength: 30
    PatchedPublisher:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_date:
          type: string
          format: date-time
        deleted_date:
          type: string
          format: date-time
          nullable: true
        name_publisher:
          type: string
          maxLength: 30
    PatchedPurchase:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_date:
          type: string
          format: date-time
        deleted_date:
          type: string
          format: date-time
          nullable: true
        total_amount:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        date_purchase:
          type: string
          format: date-time
        user:
          type: integer
        books:
          type: array
          items:
            type: integer
    PatchedRole:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_date:
          type: string
          format: date-time
        deleted_date:
          type: string
          format: date-time
          nullable: true
        description:
          type: string
          maxLength: 30
    PatchedSale:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_date:
          type: string
          format: date-time
        deleted_date:
          type: string
          format: date-time
          nullable: true
        total_amount:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        date_sale:
          type: string
          format: date-time
        seller:
          type: integer
        book:
          type: integer
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_date:
          type: string
          format: date-time
        deleted_date:
          type: string
          format: date-time
          nullable: true
        user_name:
          type: string
          maxLength: 50
        email_address:
          type: string
          maxLength: 40
        user_password:
          type: string
          maxLength: 20
        street_address:
          type: string
          nullable: true
        score:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
    Publisher:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_date:
          type: string
          format: date-time
        deleted_date:
          type: string
          format: date-time
          nullable: true
        name_publisher:
          type: string
          maxLength: 30
      required:
      - created_date
      - id
      - name_publisher
    Purchase:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_date:
          type: string
          format: date-time
        deleted_date:
          type: string
          format: date-time
          nullable: true
        total_amount:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        date_purchase:
          type: string
          format: date-time
        user:
          type: integer
        books:
          type: array
          items:
            type: integer
      required:
      - books
      - created_date
      - date_purchase
      - id
      - total_amount
      - user
    Role:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_date:
          type: string
          format: date-time
        deleted_date:
          type: string
          format: date-time
          nullable: true
        description:
          type: string
          maxLength: 30
      required:
      - created_date
      - description
      - id
    Sale:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_date:
          type: string
          format: date-time
        deleted_date:
          type: string
          format: date-time
          nullable: true
        total_amount:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        date_sale:
          type: string
          format: date-time
        seller:
          type: integer
        book:
          type: integer
      required:
      - book
      - created_date
      - date_sale
      - id
      - seller
      - total_amount
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_date:
          type: string
          format: date-time
        deleted_date:
          type: string
          format: date-time
          nullable: true
        user_name:
          type: string
          maxLength: 50
        email_address:
          type: string
          maxLength: 40
        user_password:
          type: string
          maxLength: 20
        street_address:
          type: string
          nullable: true
        score:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
      required:
      - created_date
      - email_address
      - id
      - user_name
      - user_password
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
